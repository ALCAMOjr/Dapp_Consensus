type Propuesta = record {
    descripcion: text;
    aprovados: nat32;
    rechazados: nat32;
    pasados: nat32;
    esta_activo: bool;
    votos: vec principal;
    propietario: principal;
};

type CrearPropuesta = record {
    descripcion: text;
    is_active: bool; // Esto sigue siendo text
};

type Result = variant {
    Ok;
    Err: VotoError;
};
type VotoError = variant {
    VotoYaRealizado;
    PropuestaInactiva;
    EleccionInvalida;
    PropuestaInexistente;
    AccesoDenegado;
    Errorctualizacion;
    EntradaInvalida;
};
type Eleccion = variant {
    Aprovar;
    Rechazar;
    Paso;
};

service : {
    "get_proposal": (nat64) -> (opt Propuesta) query;
    "get_proposal_account": () -> (nat64) query;
    "create_proposal": (nat64, CrearPropuesta) -> (opt Propuesta);
    "update_proposal": (nat64, CrearPropuesta) -> (Result);
    "end_proposal": (nat64) -> (Result);
    "vote": (nat64, Eleccion) -> (Result);

}
